//Cupboard.cs FILE

namespace BookSpaceOptimizationProblem
{
    class Cupboard
    {
        public int capacity;
        public List<int> Category= new List<int>();
        public List<int> Books=new List<int>();
        public Cupboard(int capacityOfCupboard)
        {
            capacity = capacityOfCupboard;
        }

        public void AddBook(int category, int noOfBooks)
        {
            capacity = capacity - noOfBooks;
            Category.Add(category);
            Books.Add(noOfBooks);
        }
    }
}

//Form.cs File

namespace BookSpaceOptimizationProblem
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void noOfCupboards_txt_TextChanged(object sender, EventArgs e)
        {

        }

        private void submit_btn_Click(object sender, EventArgs e)
        {
            int noOfCupboards, noOfCategories, capacityOfCupboard;

            noOfCupboards = Convert.ToInt32(noOfCupboards_txt.Text);
            noOfCategories = Convert.ToInt32(noOfCategories_txt.Text);
            capacityOfCupboard = Convert.ToInt32(capacityOfCupboard_txt.Text);
            
            List<int> categoryBooks = new List<int>();
            List<Cupboard> cupboards = new List<Cupboard>();
            for (int a = 1; a <= noOfCupboards; a++)
            {
                Cupboard cb1 = new Cupboard(capacityOfCupboard);
                cupboards.Add(cb1);
            }
            for (int b = 1; b <= noOfCategories; b++)
            {
                int categoryInput = 0;
                //MessageBox.Show("Enter books of catagory " + i + " :");
                string input = Microsoft.VisualBasic.Interaction.InputBox("Enter books of catagory " + b + " :", "The Title", "Desired Default", -1, -1);
                categoryInput = Convert.ToInt32(input);
                categoryBooks.Add(categoryInput);
            }
            categoryBooks.Sort();
            int i = 0, j = 0;
            MessageBox.Show("Before While loop"  );
            MessageBox.Show("book: " + categoryBooks.Count + " cupboard: " + cupboards.Count);
            while (i < categoryBooks.Count && j < cupboards.Count)
            {
                MessageBox.Show("After While loop");
                if (categoryBooks[i] <= cupboards[j].capacity)
                {
                    cupboards[j].AddBook(i, categoryBooks[i]);
                    if (cupboards[j].capacity == 0)
                    {
                        j++;
                    }
                    i++;
                }
                else //(books[i] >= cupboards[j].capacity);
                {
                    if (cupboards[j].Category.Count == 0)
                    {
                        int remaingBooks = categoryBooks[i] - cupboards[j].capacity;
                        cupboards[j].AddBook(i, cupboards[j].capacity);
                        j++;
                        while (remaingBooks > 0 && j < cupboards.Count)
                        {
                            int newRemainingBooks = remaingBooks - cupboards[j].capacity;
                            if (newRemainingBooks < 0)
                            {
                                cupboards[j].AddBook(i, remaingBooks);
                                j++;
                                remaingBooks = 0;
                            }
                            else
                            {
                                int newRemainingBooksLeft = remaingBooks - cupboards[j].capacity;
                                cupboards[j].AddBook(i, remaingBooks - newRemainingBooksLeft);
                                j++;
                                remaingBooks = newRemainingBooksLeft;
                            }
                        }
                        i++;
                    }
                    else
                    {
                        j++;
                    }
                }
            }
            void printCupboard(Cupboard cb2)
            {
                MessageBox.Show("remaining capacity: " + cb2.capacity);
                for (int k = 0; k < cb2.Books.Count; k++)
                {
                    MessageBox.Show("Catagory " +cb2.Category[k] + " book " + cb2.Books[k]);
                }
            }
            for (int n = 0; n < cupboards.Count; n++)
            {
                MessageBox.Show("For Cupboard no " + n + " : ");
                printCupboard(cupboards[n]);


            }
        }
    }
}
